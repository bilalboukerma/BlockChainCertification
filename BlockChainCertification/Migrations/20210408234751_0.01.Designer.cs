// <auto-generated />
using System;
using BlockChainCertification.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BlockChainCertification.Migrations
{
    [DbContext(typeof(AwardeCrtificateContext))]
    [Migration("20210408234751_0.01")]
    partial class _001
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10");

            modelBuilder.Entity("BlockChainCertification.Models.AwardeCrtificate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CertificationId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CrtificateNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Moyen")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("PreviousId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Recipient")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("TransactionDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("provider")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CertificationId");

                    b.HasIndex("PreviousId");

                    b.ToTable("AwardeCrtificate");
                });

            modelBuilder.Entity("BlockChainCertification.Models.Certification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CertificateTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset>("CreateDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Certification");
                });

            modelBuilder.Entity("BlockChainCertification.Models.AwardeCrtificate", b =>
                {
                    b.HasOne("BlockChainCertification.Models.Certification", null)
                        .WithMany("AwardeCrtificate")
                        .HasForeignKey("CertificationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BlockChainCertification.Models.AwardeCrtificate", "Previous")
                        .WithMany()
                        .HasForeignKey("PreviousId");
                });
#pragma warning restore 612, 618
        }
    }
}
